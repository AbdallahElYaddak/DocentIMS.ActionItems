<?xml version="1.0" encoding="UTF-8"?>
<dc-workflow workflow_id="docentIMS_scope_item_workflow" title="DocentIMS Scope Item Workflow" description="The workflow for DocentIMS Scope Item assigned to team members after the Scope is parsed.
   For the Scope Creation WF, see:  docentIMS_scope_workflow" state_variable="review_state" initial_state="Private" manager_bypass="True">
 <instance-creation-conditions>
   <guard>
    <guard-role>PrjMgr</guard-role>
   </guard>
 </instance-creation-conditions>
 <permission>Access contents information</permission>
 <permission>Modify portal content</permission>
 <permission>View</permission>
 <state state_id="1.Private" title="Private">
  <description>Visible only to content creator.  Stays private until person ready to get comments.</description>
 </state>
 <state state_id="2.Draft" title="Draft">
  <description>Content that needs to be reviewed internally before going to the customer.  Content, regardless of document changes, stays in Draft untill ready to be submitted to the Client.  Only the team can see this content – not client.

Note:  Content stays in draft state even as document is revised and document revision changes.  That is, there is not “Draft 1” , Draft 2” States like there is for revision on a document.
</description>
 </state>
 <state state_id="3.Submitted" title="Submitted">
  <description>Content has been reviewed by team, document edited as required, and now the document is ready for Client review.

As with “Draft” , the document stays in “Submitted” untill accepted by the Client.  </description>
 </state>
 <state state_id="4.Published" title="Published">
  <description>This is the final state for all content.  This means the content type has been reviewed and revised as required.  The content is now ready for everyone to see the content based on permissions.</description>
 </state>
 <state state_id="5.Archived" title="Archived">
  <description>Any content that needs to be “Deleted” will be Archived.  This removes it from the system and not visible to team; however, the PrjMgr can still see and retrieve the document.  
   This is the same as deleting; however, this means it there is always a record the document was created.</description>
 </state>
 <transition transition_id="accept" title="Accept" new_state="Active" trigger="USER" before_script="" after_script="">
  <description>User accepts responsibility for the SOW analysis</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=accept" category="workflow" icon="">Accept</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="archive" title="Archive" new_state="Archived" trigger="USER" before_script="" after_script="">
  <description>Move SOW to Archive State.  This is equivalent to deleting - the item will no longer be visible; however, it may be see by the PM and may be recovered.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=archive" category="workflow" icon="">Archive</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="assign" title="" new_state="" trigger="USER" before_script="" after_script="">
  
  <guard>
  </guard>
 </transition>
 <transition transition_id="close" title="Close" new_state="Closed" trigger="USER" before_script="" after_script="">
  <description>when SOW analysis is complete the PM closes</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=close" category="workflow" icon="">Close</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="complete" title="Complete" new_state="Completed" trigger="USER" before_script="" after_script="">
  <description>Work on the Action Item is complete and PM moves it to Completed</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=complete" category="workflow" icon="">Complete</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="retract" title="Member retracts submission" new_state="Private" trigger="USER" before_script="" after_script="">
  <description>If you submitted the SOW section but you want to make additional edits, this will take it back.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=retract" category="workflow" icon="">Retract</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="return_toActive" title="Return to Active" new_state="Active" trigger="USER" before_script="" after_script="">
  <description>Used to move contact back from Completed to Active</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=return_toActive" category="workflow" icon="">Return</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="return_toClosed" title="Return to Closed" new_state="Closed" trigger="USER" before_script="" after_script="">
  <description>Returns the object from "Archived" to "Closed"</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=return_toClosed" category="workflow" icon="">Return</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="return_toCompleted" title="Return to Completed" new_state="Completed" trigger="USER" before_script="" after_script="">
  <description>Returns content from Closed to Completed.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=return_toCompleted" category="workflow" icon="">Return</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="return_toPrivate" title="Return to Private" new_state="Private" trigger="USER" before_script="" after_script="">
  <description>Returns object from Submitted state to the Private state</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=return_toPrivate" category="workflow" icon="">Return</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="return_toSubmitted" title="Return to Submitted" new_state="Submitted" trigger="USER" before_script="" after_script="">
  <description>Used to move contact back from Active to Submitted.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=return_toSubmitted" category="workflow" icon="">Return</action>
  <guard>
  </guard>
 </transition>
 <transition transition_id="submit" title="Submit to PM" new_state="Submitted" trigger="USER" before_script="" after_script="">
  <description>Submits SOW section for PM approval and publication.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=submit" category="workflow" icon="">Send to assignee</action>
  <guard>
  </guard>
 </transition>
 <worklist worklist_id="reviewer_queue" title="">
  <description>Reviewer tasks</description>
  <action url="%(portal_url)s/search?review_state=pending" category="global" icon="">Pending (%(count)d)</action>
  <guard>
   <guard-permission>Review portal content</guard-permission>
  </guard>
  <match name="review_state" values="pending"/>
 </worklist>
 <variable variable_id="action" for_catalog="False" for_status="True" update_always="True">
  <description>Previous transition</description>
  <default>
   
   <expression>transition/getId|nothing</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True">
  <description>The ID of the user who performed the previous transition</description>
  <default>
   
   <expression>user/getId</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True">
  <description>Comment about the last transition</description>
  <default>
   
   <expression>python:state_change.kwargs.get('comment', '')</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False">
  <description>Provides access to workflow history</description>
  <default>
   
   <expression>state_change/getHistory</expression>
  </default>
  <guard>
   <guard-permission>Request review</guard-permission>
   <guard-permission>Review portal content</guard-permission>
  </guard>
 </variable>
 <variable variable_id="time" for_catalog="False" for_status="True" update_always="True">
  <description>When the previous transition was performed</description>
  <default>
   
   <expression>state_change/getDateTime</expression>
  </default>
  <guard>
  </guard>
 </variable>
</dc-workflow>
