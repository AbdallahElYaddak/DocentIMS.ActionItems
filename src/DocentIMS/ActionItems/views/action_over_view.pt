<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="DocentIMS.ActionItems"
      metal:use-macro="context/main_template/macros/master">



  <body>

        <metal:content-core fill-slot="content-core">

          <div tal:define="fields view/get_fields|None">
              <!--table class="pat-xdatatables pat-tablesorter stacktable listing table-responsive" data-pat-datatables="pageLength: 50; pagingType: simple"-->
            <table class="listing pat-datatables listing" data-pat-datatables="pageLength: 50">
              <thead>
                <tr>
                  <tal:repeat tal:repeat="field fields">
                    <th>${field/row_title|None}</th>

                  </tal:repeat>
                </tr>
              </thead>
              <tbody>
                <tr tal:repeat="item context/results|context/getFolderContents">
                  <tal:obj tal:define="obj item/getObject">

                    <tal:repeat tal:repeat="field fields">
                      <td tal:define="val python:getattr(obj, field['row_field'], '')">
                        <a href="${item/getURL}" tal:omit-tag="python: field['row_field']!='title'">
                          <tal:check tal:condition="python: isinstance(val,bool)">
                            <span tal:condition="python: val==False"> &nbsp; No </span>
                            <span tal:condition="python: val==True"> âœ“ Yes </span>
                          </tal:check>
                          <span tal:condition="python: not isinstance(val,bool)">${val}</span>
                        </a>
                    </td>
                    </tal:repeat>

                  </tal:obj>
                </tr>
              </tbody>
              <table>
            </div>
            <style>
              .priority-1 span { color: red; padding: 1px 5px}
              .priority-2 span { color: orange; padding: 1px 5px}
              .priority-3 span  {color:  green; padding: 1px 5px}
              .graph {border: 1px solid silver; max-width: 600px; padding: 15px;}
              .flex-wrap { flex-wrap: wrap; display: flex; justify-content: space-between;}
            </style>

            <script src='https://cdn.plot.ly/plotly-2.24.1.min.js'></script>
            <div><p>&nbsp;</p></div>
            <h2>Priority</h2>

            <div id='plotlyDiv'><!-- Plotly chart will be drawn inside this DIV --></div>
            <script tal:define="graphdata python: view.get_graphdata()">
              var data = [
                  {
                    x: ${python: graphdata[0]},
                    y: ${python: graphdata[1]},
                    marker:{
                      color: ${python: graphdata[2]}
                    },
                    type: 'bar'
                  }
                ];
                var layout = {
                  yaxis: {
                    tick0: 0,
                    dtick: 1,
                  },
                };
                Plotly.newPlot('plotlyDiv', data, layout);
            </script>


            <h2>Days left</h2>
            <div class="flex flex-wrap">
              <tal:repeat  tal:repeat="graphdata python: view.get_piedata()">
                <div class="graph">
                  <h5>${python: graphdata['title']}</h5>

                  <div  id="div-${python: graphdata['title']}-{${python: graphdata['index']}"><!-- Plotly chart will be drawn inside this DIV --></div>
                    <script>
                      var data = [
                          {
                            labels: ['Days Left: ${python: graphdata['data'][0]}', 'Days Passed: ${python: graphdata['data'][1]}' ],
                            values: ${python: graphdata['data']},
                            type: 'pie'
                          }
                        ];
                        var layout = {
                          height: 400,
                          width: 500
                        };

                        Plotly.newPlot('div-${python: graphdata['title']}-{${python: graphdata['index']}', data, layout);
                    </script>
                </div>
              </tal:repeat>
            </div>
            <div><p>&nbsp;</p></div>
        </metal:content-core>
</body>
</html>
