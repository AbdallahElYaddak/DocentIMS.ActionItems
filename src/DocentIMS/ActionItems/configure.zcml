
<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="DocentIMS.ActionItems">

  <i18n:registerTranslations directory="locales" />

<include package="zope.annotation" />
 

 
  <include file="permissions.zcml" />
  <include package=".viewlets" />
  <include package=".portlets" />
  <include package=".indexers" />
  <!--include package=".viewlets" /-->
  <include package=".views" />
  <include file="permissions.zcml" />
  <include package="plone.contentrules" />
  <include
      package="plone.contentrules"
      file="meta.zcml"
      />
      
  <interface
      interface="Products.PlonePAS.interfaces.events.IUserInitialLoginInEvent"
      type="plone.contentrules.rule.interfaces.IRuleEventType"
      name="User Logged in first time"
      />

  <subscriber
    for="Products.PlonePAS.interfaces.events.IUserInitialLoginInEvent"
    handler=".handlers.user_logged_in_first"
    />




 <!-- First logged in action definition -->

  <adapter factory=".firstloggedin.LogginFirstActionExecutor" />


  <browser:page
      name="add"
      for="plone.app.contentrules.browser.interfaces.IRuleActionAdding"
      class=".firstloggedin.LogginFirstAddFormView"
      permission="plone.app.contentrules.ManageContentRules"
      />


 <browser:page
      name="edit"
      for="Products.PlonePAS.interfaces.events.IUserInitialLoginInEvent"
      class=".firstloggedin.LogginFirstEditFormView"
      permission="plone.app.contentrules.ManageContentRules"
      /> 

      

  <plone:ruleAction
      name="DocentIMS.ActionItems.LogginFirst"
      title="Redirect to page"
      description="Redirect to page"
      for="*"
      event="*"
      schema=".firstloggedin.ILogginFirstAction"
      factory=".firstloggedin.LogginFirstAction"
      addview="add"
      editview="edit"
      />




  <genericsetup:registerProfile
      name="default"
      title="DocentIMS.ActionItems"
      directory="profiles/default"
      description="Installs the DocentIMS.ActionItems add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      pre_handler=".setuphandlers.pre_install"
      post_handler=".setuphandlers.post_install"
      />


  <genericsetup:registerProfile
      name="import"
      title="DocentIMS.ActionItems"
      directory="profiles/import"
      description="Installs the DocentIMS.ActionItems add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.post_import"
      />


  <genericsetup:registerProfile
      name="uninstall"
      title="DocentIMS.ActionItems (uninstall)"
      directory="profiles/uninstall"
      description="Uninstalls the DocentIMS.ActionItems add-on."
      provides="Products.GenericSetup.interfaces.EXTENSION"
      post_handler=".setuphandlers.uninstall"
      />

  <utility
      factory=".setuphandlers.HiddenProfiles"
      name="DocentIMS.ActionItems-hiddenprofiles"
      />

<!-- Change UUID after creation -->
  <subscriber
    for="Products.CMFCore.interfaces.IFolderish        
        zope.lifecycleevent.interfaces.IObjectAddedEvent"
    handler=".subscribers.change_uuid"
    />

  <!-- <subscriber
    for="Products.CMFCore.interfaces.IFolderish        
        zope.lifecycleevent.interfaces.IObjectModifiedEvent"
    handler=".subscribers.remove_description"
    /> -->

<!-- to do find registration for right thing-->
  <subscriber
    for="Products.CMFCore.interfaces.IFolderish        
        zope.lifecycleevent.interfaces.IObjectModifiedEvent"
    handler=".subscribers.save_note"
    />

    <!-- subscriber for the 'Last state' transaction -->
  <!--subscriber
    for="*
        Products.DCWorkflow.interfaces.IAfterTransitionEvent"
    handler=".subscribers.last_state"
    /-->

    <!-- Adapter for mail so we can sent mail to 'owner' -->
    <adapter
        factory=".adapters.AssignedTo"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="assigned"
    />
    
    <adapter
        factory=".adapters.AssignedMail"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="assignedmail"
    />

    <adapter
        factory=".adapters.DaysLeft"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="daysleft"
    />
    
    <adapter
        factory=".adapters.DateChanged"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="datechanged"
    />
    

    <adapter
        factory=".adapters.AssignedFullName"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="assignedfullname"
    />

    <adapter
        factory=".adapters.ProjectShortName"
        provides="plone.stringinterp.interfaces.IStringSubstitution"
        for="*"
        name="project_short_name"
    />
    

  <utility
    	  component=".vocabularies.ActionItemsVocabulary"
        name="DocentIMS.ActionItems.ActionItemsVocabulary" />


  <utility
  	  component=".vocabularies.ShowActionItemsVocabulary"
      name="DocentIMS.ActionItems.ShowActionItemsVocabulary" />

  <utility
  	  component=".vocabularies.CompanyVocabulary"
      name="DocentIMS.ActionItems.CompanyVocabulary" />

  <utility
  	  component=".vocabularies.ProjectRolesVocabulary"
      name="DocentIMS.ActionItems.ProjectRolesVocabulary" />

  <utility
  	  component=".vocabularies.Site2Vocabulary"
      name="DocentIMS.ActionItems.Site2Vocabulary" />

  <utility
  	  component=".vocabularies.PriorityVocabulary"
      name="DocentIMS.ActionItems.PriorityVocabulary" />

  <utility
  	  component=".vocabularies.AiFieldsVocabulary"
      name="DocentIMS.ActionItems.AiFieldsVocabulary" />

  <utility
  	  component=".vocabularies.SowFieldsVocabulary"
      name="DocentIMS.ActionItems.SowFieldsVocabulary" />

  <utility
  	  component=".vocabularies.QPVocabulary"
      name="DocentIMS.ActionItems.QPVocabulary" />      

  <utility
  	  component=".vocabularies.CompanyRolesVocabulary"
      name="DocentIMS.ActionItems.CompanyRolesVocabulary" />      

</configure>
